// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: File.proto

#include "File.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Global {
namespace Protocol {
namespace File {
constexpr EntryInfo::EntryInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , size_(uint64_t{0u})
  , last_modifying_time_(int64_t{0})
  , is_directory_(false){}
struct EntryInfoDefaultTypeInternal {
  constexpr EntryInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EntryInfoDefaultTypeInternal() {}
  union {
    EntryInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EntryInfoDefaultTypeInternal _EntryInfo_default_instance_;
constexpr RequestVisitFiles::RequestVisitFiles(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : auth_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(int64_t{0}){}
struct RequestVisitFilesDefaultTypeInternal {
  constexpr RequestVisitFilesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestVisitFilesDefaultTypeInternal() {}
  union {
    RequestVisitFiles _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestVisitFilesDefaultTypeInternal _RequestVisitFiles_default_instance_;
constexpr ResponseVisitFiles::ResponseVisitFiles(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default_dirs_()
  , entries_()
  , err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , err_code_(0){}
struct ResponseVisitFilesDefaultTypeInternal {
  constexpr ResponseVisitFilesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseVisitFilesDefaultTypeInternal() {}
  union {
    ResponseVisitFiles _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseVisitFilesDefaultTypeInternal _ResponseVisitFiles_default_instance_;
constexpr RequestVisitFiles2::RequestVisitFiles2(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : auth_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(int64_t{0})
  , async_task_id_(uint64_t{0u})
  , async_task_certificate_(0u){}
struct RequestVisitFiles2DefaultTypeInternal {
  constexpr RequestVisitFiles2DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestVisitFiles2DefaultTypeInternal() {}
  union {
    RequestVisitFiles2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestVisitFiles2DefaultTypeInternal _RequestVisitFiles2_default_instance_;
constexpr ResponseVisitFiles2::ResponseVisitFiles2(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default_dirs_()
  , entries_()
  , err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , async_task_id_(uint64_t{0u})
  , async_task_certificate_(0u)
  , err_code_(0){}
struct ResponseVisitFiles2DefaultTypeInternal {
  constexpr ResponseVisitFiles2DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseVisitFiles2DefaultTypeInternal() {}
  union {
    ResponseVisitFiles2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseVisitFiles2DefaultTypeInternal _ResponseVisitFiles2_default_instance_;
constexpr RequestMakeDirectory::RequestMakeDirectory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0}){}
struct RequestMakeDirectoryDefaultTypeInternal {
  constexpr RequestMakeDirectoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestMakeDirectoryDefaultTypeInternal() {}
  union {
    RequestMakeDirectory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestMakeDirectoryDefaultTypeInternal _RequestMakeDirectory_default_instance_;
constexpr ResponseMakeDirectory::ResponseMakeDirectory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , last_modifying_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , err_code_(0){}
struct ResponseMakeDirectoryDefaultTypeInternal {
  constexpr ResponseMakeDirectoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseMakeDirectoryDefaultTypeInternal() {}
  union {
    ResponseMakeDirectory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseMakeDirectoryDefaultTypeInternal _ResponseMakeDirectory_default_instance_;
constexpr RequestDeleteEntry::RequestDeleteEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0}){}
struct RequestDeleteEntryDefaultTypeInternal {
  constexpr RequestDeleteEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestDeleteEntryDefaultTypeInternal() {}
  union {
    RequestDeleteEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestDeleteEntryDefaultTypeInternal _RequestDeleteEntry_default_instance_;
constexpr ResponseDeleteEntry::ResponseDeleteEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , err_code_(0){}
struct ResponseDeleteEntryDefaultTypeInternal {
  constexpr ResponseDeleteEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseDeleteEntryDefaultTypeInternal() {}
  union {
    ResponseDeleteEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseDeleteEntryDefaultTypeInternal _ResponseDeleteEntry_default_instance_;
constexpr RequestRenameEntry::RequestRenameEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , old_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , new_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0}){}
struct RequestRenameEntryDefaultTypeInternal {
  constexpr RequestRenameEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestRenameEntryDefaultTypeInternal() {}
  union {
    RequestRenameEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestRenameEntryDefaultTypeInternal _RequestRenameEntry_default_instance_;
constexpr ResponseRenameEntry::ResponseRenameEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , old_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , new_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , last_modifying_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , err_code_(0){}
struct ResponseRenameEntryDefaultTypeInternal {
  constexpr ResponseRenameEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseRenameEntryDefaultTypeInternal() {}
  union {
    ResponseRenameEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseRenameEntryDefaultTypeInternal _ResponseRenameEntry_default_instance_;
constexpr RequestGoUp::RequestGoUp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0}){}
struct RequestGoUpDefaultTypeInternal {
  constexpr RequestGoUpDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestGoUpDefaultTypeInternal() {}
  union {
    RequestGoUp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestGoUpDefaultTypeInternal _RequestGoUp_default_instance_;
constexpr ResponseGoUp::ResponseGoUp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_()
  , err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , err_code_(0){}
struct ResponseGoUpDefaultTypeInternal {
  constexpr ResponseGoUpDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseGoUpDefaultTypeInternal() {}
  union {
    ResponseGoUp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseGoUpDefaultTypeInternal _ResponseGoUp_default_instance_;
constexpr RequestGoHome::RequestGoHome(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seq_(int64_t{0})
  , user_id_(int64_t{0}){}
struct RequestGoHomeDefaultTypeInternal {
  constexpr RequestGoHomeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestGoHomeDefaultTypeInternal() {}
  union {
    RequestGoHome _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestGoHomeDefaultTypeInternal _RequestGoHome_default_instance_;
constexpr ResponseGoHome::ResponseGoHome(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_()
  , err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , err_code_(0){}
struct ResponseGoHomeDefaultTypeInternal {
  constexpr ResponseGoHomeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseGoHomeDefaultTypeInternal() {}
  union {
    ResponseGoHome _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseGoHomeDefaultTypeInternal _ResponseGoHome_default_instance_;
constexpr RequestListEntries::RequestListEntries(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0}){}
struct RequestListEntriesDefaultTypeInternal {
  constexpr RequestListEntriesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestListEntriesDefaultTypeInternal() {}
  union {
    RequestListEntries _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestListEntriesDefaultTypeInternal _RequestListEntries_default_instance_;
constexpr ResponseListEntries::ResponseListEntries(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_()
  , err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dir_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , err_code_(0){}
struct ResponseListEntriesDefaultTypeInternal {
  constexpr ResponseListEntriesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseListEntriesDefaultTypeInternal() {}
  union {
    ResponseListEntries _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseListEntriesDefaultTypeInternal _ResponseListEntries_default_instance_;
constexpr RequestOpenFile::RequestOpenFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : task_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , mode_(0)
  , force_(false)
  , file_size_(uint64_t{0u})
  , seek_(uint64_t{0u}){}
struct RequestOpenFileDefaultTypeInternal {
  constexpr RequestOpenFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestOpenFileDefaultTypeInternal() {}
  union {
    RequestOpenFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestOpenFileDefaultTypeInternal _RequestOpenFile_default_instance_;
constexpr ResponseOpenFile::ResponseOpenFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , task_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , seq_(int64_t{0})
  , user_id_(int64_t{0})
  , err_code_(0){}
struct ResponseOpenFileDefaultTypeInternal {
  constexpr ResponseOpenFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseOpenFileDefaultTypeInternal() {}
  union {
    ResponseOpenFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseOpenFileDefaultTypeInternal _ResponseOpenFile_default_instance_;
constexpr RequestWriteFileBlock::RequestWriteFileBlock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : task_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , compressed_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(int64_t{0})
  , seek_(uint64_t{0u})
  , raw_data_len_(0u){}
struct RequestWriteFileBlockDefaultTypeInternal {
  constexpr RequestWriteFileBlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestWriteFileBlockDefaultTypeInternal() {}
  union {
    RequestWriteFileBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestWriteFileBlockDefaultTypeInternal _RequestWriteFileBlock_default_instance_;
constexpr ResponseWriteFileBlock::ResponseWriteFileBlock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , task_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(int64_t{0})
  , after_seek_(uint64_t{0u})
  , err_code_(0){}
struct ResponseWriteFileBlockDefaultTypeInternal {
  constexpr ResponseWriteFileBlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseWriteFileBlockDefaultTypeInternal() {}
  union {
    ResponseWriteFileBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseWriteFileBlockDefaultTypeInternal _ResponseWriteFileBlock_default_instance_;
constexpr RequestReadFileBlock::RequestReadFileBlock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : task_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(int64_t{0})
  , seek_(uint64_t{0u})
  , len_(0u){}
struct RequestReadFileBlockDefaultTypeInternal {
  constexpr RequestReadFileBlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestReadFileBlockDefaultTypeInternal() {}
  union {
    RequestReadFileBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestReadFileBlockDefaultTypeInternal _RequestReadFileBlock_default_instance_;
constexpr ResponseReadFileBlock::ResponseReadFileBlock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : err_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , task_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , compressed_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , err_code_(0)
  , raw_data_len_(0u)
  , user_id_(int64_t{0})
  , seek_(uint64_t{0u}){}
struct ResponseReadFileBlockDefaultTypeInternal {
  constexpr ResponseReadFileBlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseReadFileBlockDefaultTypeInternal() {}
  union {
    ResponseReadFileBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseReadFileBlockDefaultTypeInternal _ResponseReadFileBlock_default_instance_;
constexpr CloseFile::CloseFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : task_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(int64_t{0}){}
struct CloseFileDefaultTypeInternal {
  constexpr CloseFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CloseFileDefaultTypeInternal() {}
  union {
    CloseFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CloseFileDefaultTypeInternal _CloseFile_default_instance_;
}  // namespace File
}  // namespace Protocol
}  // namespace Global
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_File_2eproto[24];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_File_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_File_2eproto = nullptr;

const uint32_t TableStruct_File_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::EntryInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::EntryInfo, directory_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::EntryInfo, name_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::EntryInfo, size_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::EntryInfo, is_directory_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::EntryInfo, last_modifying_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles, auth_string_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles, default_dirs_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles2, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles2, async_task_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles2, async_task_certificate_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestVisitFiles2, auth_string_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles2, async_task_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles2, async_task_certificate_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles2, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles2, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles2, default_dirs_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseVisitFiles2, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestMakeDirectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestMakeDirectory, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestMakeDirectory, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestMakeDirectory, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestMakeDirectory, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, name_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseMakeDirectory, last_modifying_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestDeleteEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestDeleteEntry, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestDeleteEntry, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestDeleteEntry, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestDeleteEntry, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseDeleteEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseDeleteEntry, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseDeleteEntry, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseDeleteEntry, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseDeleteEntry, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseDeleteEntry, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseDeleteEntry, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestRenameEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestRenameEntry, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestRenameEntry, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestRenameEntry, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestRenameEntry, old_name_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestRenameEntry, new_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, old_name_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, new_name_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseRenameEntry, last_modifying_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestGoUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestGoUp, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestGoUp, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestGoUp, dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoUp, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoUp, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoUp, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoUp, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoUp, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoUp, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestGoHome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestGoHome, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestGoHome, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoHome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoHome, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoHome, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoHome, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoHome, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoHome, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseGoHome, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestListEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestListEntries, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestListEntries, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestListEntries, dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseListEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseListEntries, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseListEntries, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseListEntries, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseListEntries, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseListEntries, dir_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseListEntries, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, task_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, mode_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, directory_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, file_name_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, file_size_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, seek_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestOpenFile, force_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseOpenFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseOpenFile, seq_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseOpenFile, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseOpenFile, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseOpenFile, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseOpenFile, task_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestWriteFileBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestWriteFileBlock, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestWriteFileBlock, task_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestWriteFileBlock, seek_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestWriteFileBlock, raw_data_len_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestWriteFileBlock, compressed_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseWriteFileBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseWriteFileBlock, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseWriteFileBlock, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseWriteFileBlock, task_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseWriteFileBlock, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseWriteFileBlock, after_seek_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestReadFileBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestReadFileBlock, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestReadFileBlock, task_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestReadFileBlock, seek_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::RequestReadFileBlock, len_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, err_code_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, err_string_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, task_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, seek_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, raw_data_len_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::ResponseReadFileBlock, compressed_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::CloseFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::CloseFile, user_id_),
  PROTOBUF_FIELD_OFFSET(::Global::Protocol::File::CloseFile, task_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Global::Protocol::File::EntryInfo)},
  { 11, -1, -1, sizeof(::Global::Protocol::File::RequestVisitFiles)},
  { 19, -1, -1, sizeof(::Global::Protocol::File::ResponseVisitFiles)},
  { 29, -1, -1, sizeof(::Global::Protocol::File::RequestVisitFiles2)},
  { 39, -1, -1, sizeof(::Global::Protocol::File::ResponseVisitFiles2)},
  { 51, -1, -1, sizeof(::Global::Protocol::File::RequestMakeDirectory)},
  { 61, -1, -1, sizeof(::Global::Protocol::File::ResponseMakeDirectory)},
  { 74, -1, -1, sizeof(::Global::Protocol::File::RequestDeleteEntry)},
  { 84, -1, -1, sizeof(::Global::Protocol::File::ResponseDeleteEntry)},
  { 96, -1, -1, sizeof(::Global::Protocol::File::RequestRenameEntry)},
  { 107, -1, -1, sizeof(::Global::Protocol::File::ResponseRenameEntry)},
  { 121, -1, -1, sizeof(::Global::Protocol::File::RequestGoUp)},
  { 130, -1, -1, sizeof(::Global::Protocol::File::ResponseGoUp)},
  { 142, -1, -1, sizeof(::Global::Protocol::File::RequestGoHome)},
  { 150, -1, -1, sizeof(::Global::Protocol::File::ResponseGoHome)},
  { 162, -1, -1, sizeof(::Global::Protocol::File::RequestListEntries)},
  { 171, -1, -1, sizeof(::Global::Protocol::File::ResponseListEntries)},
  { 183, -1, -1, sizeof(::Global::Protocol::File::RequestOpenFile)},
  { 198, -1, -1, sizeof(::Global::Protocol::File::ResponseOpenFile)},
  { 209, -1, -1, sizeof(::Global::Protocol::File::RequestWriteFileBlock)},
  { 220, -1, -1, sizeof(::Global::Protocol::File::ResponseWriteFileBlock)},
  { 231, -1, -1, sizeof(::Global::Protocol::File::RequestReadFileBlock)},
  { 241, -1, -1, sizeof(::Global::Protocol::File::ResponseReadFileBlock)},
  { 254, -1, -1, sizeof(::Global::Protocol::File::CloseFile)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_EntryInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestVisitFiles_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseVisitFiles_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestVisitFiles2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseVisitFiles2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestMakeDirectory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseMakeDirectory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestDeleteEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseDeleteEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestRenameEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseRenameEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestGoUp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseGoUp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestGoHome_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseGoHome_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestListEntries_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseListEntries_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestOpenFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseOpenFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestWriteFileBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseWriteFileBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_RequestReadFileBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_ResponseReadFileBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Global::Protocol::File::_CloseFile_default_instance_),
};

const char descriptor_table_protodef_File_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nFile.proto\022\024Global.Protocol.File\"m\n\tEn"
  "tryInfo\022\021\n\tdirectory\030\001 \001(\t\022\014\n\004name\030\002 \001(\t"
  "\022\014\n\004size\030\003 \001(\004\022\024\n\014is_directory\030\004 \001(\010\022\033\n\023"
  "last_modifying_time\030\005 \001(\003\"9\n\021RequestVisi"
  "tFiles\022\017\n\007user_id\030\001 \001(\003\022\023\n\013auth_string\030\002"
  " \001(\t\"\202\001\n\022ResponseVisitFiles\022\020\n\010err_code\030"
  "\001 \001(\005\022\022\n\nerr_string\030\002 \001(\t\022\024\n\014default_dir"
  "s\030\003 \003(\t\0220\n\007entries\030\004 \003(\0132\037.Global.Protoc"
  "ol.File.EntryInfo\"q\n\022RequestVisitFiles2\022"
  "\017\n\007user_id\030\001 \001(\003\022\025\n\rasync_task_id\030\002 \001(\004\022"
  "\036\n\026async_task_certificate\030\003 \001(\r\022\023\n\013auth_"
  "string\030\004 \001(\t\"\272\001\n\023ResponseVisitFiles2\022\025\n\r"
  "async_task_id\030\001 \001(\004\022\036\n\026async_task_certif"
  "icate\030\002 \001(\r\022\020\n\010err_code\030\003 \001(\005\022\022\n\nerr_str"
  "ing\030\004 \001(\t\022\024\n\014default_dirs\030\005 \003(\t\0220\n\007entri"
  "es\030\006 \003(\0132\037.Global.Protocol.File.EntryInf"
  "o\"O\n\024RequestMakeDirectory\022\013\n\003seq\030\001 \001(\003\022\017"
  "\n\007user_id\030\002 \001(\003\022\013\n\003dir\030\003 \001(\t\022\014\n\004name\030\004 \001"
  "(\t\"\223\001\n\025ResponseMakeDirectory\022\013\n\003seq\030\001 \001("
  "\003\022\017\n\007user_id\030\002 \001(\003\022\020\n\010err_code\030\003 \001(\005\022\022\n\n"
  "err_string\030\004 \001(\t\022\013\n\003dir\030\005 \001(\t\022\014\n\004name\030\006 "
  "\001(\t\022\033\n\023last_modifying_time\030\007 \001(\t\"M\n\022Requ"
  "estDeleteEntry\022\013\n\003seq\030\001 \001(\003\022\017\n\007user_id\030\002"
  " \001(\003\022\013\n\003dir\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\"t\n\023Respo"
  "nseDeleteEntry\022\013\n\003seq\030\001 \001(\003\022\017\n\007user_id\030\002"
  " \001(\003\022\020\n\010err_code\030\003 \001(\005\022\022\n\nerr_string\030\004 \001"
  "(\t\022\013\n\003dir\030\005 \001(\t\022\014\n\004name\030\006 \001(\t\"c\n\022Request"
  "RenameEntry\022\013\n\003seq\030\001 \001(\003\022\017\n\007user_id\030\002 \001("
  "\003\022\013\n\003dir\030\003 \001(\t\022\020\n\010old_name\030\004 \001(\t\022\020\n\010new_"
  "name\030\005 \001(\t\"\247\001\n\023ResponseRenameEntry\022\013\n\003se"
  "q\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\022\020\n\010err_code\030\003 \001"
  "(\005\022\022\n\nerr_string\030\004 \001(\t\022\013\n\003dir\030\005 \001(\t\022\020\n\010o"
  "ld_name\030\006 \001(\t\022\020\n\010new_name\030\007 \001(\t\022\033\n\023last_"
  "modifying_time\030\010 \001(\t\"8\n\013RequestGoUp\022\013\n\003s"
  "eq\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\022\013\n\003dir\030\003 \001(\t\"\221"
  "\001\n\014ResponseGoUp\022\013\n\003seq\030\001 \001(\003\022\017\n\007user_id\030"
  "\002 \001(\003\022\020\n\010err_code\030\003 \001(\005\022\022\n\nerr_string\030\004 "
  "\001(\t\022\013\n\003dir\030\005 \001(\t\0220\n\007entries\030\006 \003(\0132\037.Glob"
  "al.Protocol.File.EntryInfo\"-\n\rRequestGoH"
  "ome\022\013\n\003seq\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\"\223\001\n\016Re"
  "sponseGoHome\022\013\n\003seq\030\001 \001(\003\022\017\n\007user_id\030\002 \001"
  "(\003\022\020\n\010err_code\030\003 \001(\005\022\022\n\nerr_string\030\004 \001(\t"
  "\022\013\n\003dir\030\005 \001(\t\0220\n\007entries\030\006 \003(\0132\037.Global."
  "Protocol.File.EntryInfo\"\?\n\022RequestListEn"
  "tries\022\013\n\003seq\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\022\013\n\003d"
  "ir\030\003 \001(\t\"\230\001\n\023ResponseListEntries\022\013\n\003seq\030"
  "\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\022\020\n\010err_code\030\003 \001(\005"
  "\022\022\n\nerr_string\030\004 \001(\t\022\013\n\003dir\030\005 \001(\t\0220\n\007ent"
  "ries\030\006 \003(\0132\037.Global.Protocol.File.EntryI"
  "nfo\"\244\001\n\017RequestOpenFile\022\013\n\003seq\030\001 \001(\003\022\017\n\007"
  "user_id\030\002 \001(\003\022\017\n\007task_id\030\003 \001(\t\022\014\n\004mode\030\004"
  " \001(\005\022\021\n\tdirectory\030\005 \001(\t\022\021\n\tfile_name\030\006 \001"
  "(\t\022\021\n\tfile_size\030\007 \001(\004\022\014\n\004seek\030\010 \001(\004\022\r\n\005f"
  "orce\030\t \001(\010\"g\n\020ResponseOpenFile\022\013\n\003seq\030\001 "
  "\001(\003\022\017\n\007user_id\030\002 \001(\003\022\020\n\010err_code\030\003 \001(\005\022\022"
  "\n\nerr_string\030\004 \001(\t\022\017\n\007task_id\030\005 \001(\t\"v\n\025R"
  "equestWriteFileBlock\022\017\n\007user_id\030\001 \001(\003\022\017\n"
  "\007task_id\030\002 \001(\t\022\014\n\004seek\030\003 \001(\004\022\024\n\014raw_data"
  "_len\030\004 \001(\r\022\027\n\017compressed_data\030\005 \001(\014\"t\n\026R"
  "esponseWriteFileBlock\022\020\n\010err_code\030\001 \001(\005\022"
  "\022\n\nerr_string\030\002 \001(\t\022\017\n\007task_id\030\003 \001(\t\022\017\n\007"
  "user_id\030\004 \001(\003\022\022\n\nafter_seek\030\005 \001(\004\"S\n\024Req"
  "uestReadFileBlock\022\017\n\007user_id\030\001 \001(\003\022\017\n\007ta"
  "sk_id\030\002 \001(\t\022\014\n\004seek\030\003 \001(\004\022\013\n\003len\030\004 \001(\r\"\234"
  "\001\n\025ResponseReadFileBlock\022\020\n\010err_code\030\001 \001"
  "(\005\022\022\n\nerr_string\030\002 \001(\t\022\017\n\007task_id\030\003 \001(\t\022"
  "\017\n\007user_id\030\004 \001(\003\022\014\n\004seek\030\005 \001(\004\022\024\n\014raw_da"
  "ta_len\030\006 \001(\r\022\027\n\017compressed_data\030\007 \001(\014\"-\n"
  "\tCloseFile\022\017\n\007user_id\030\001 \001(\003\022\017\n\007task_id\030\002"
  " \001(\tb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_File_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_File_2eproto = {
  false, false, 2772, descriptor_table_protodef_File_2eproto, "File.proto", 
  &descriptor_table_File_2eproto_once, nullptr, 0, 24,
  schemas, file_default_instances, TableStruct_File_2eproto::offsets,
  file_level_metadata_File_2eproto, file_level_enum_descriptors_File_2eproto, file_level_service_descriptors_File_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_File_2eproto_getter() {
  return &descriptor_table_File_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_File_2eproto(&descriptor_table_File_2eproto);
namespace Global {
namespace Protocol {
namespace File {

// ===================================================================

class EntryInfo::_Internal {
 public:
};

EntryInfo::EntryInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.EntryInfo)
}
EntryInfo::EntryInfo(const EntryInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    directory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_directory().empty()) {
    directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_directory(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_directory_) -
    reinterpret_cast<char*>(&size_)) + sizeof(is_directory_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.EntryInfo)
}

inline void EntryInfo::SharedCtor() {
directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  directory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&size_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_directory_) -
    reinterpret_cast<char*>(&size_)) + sizeof(is_directory_));
}

EntryInfo::~EntryInfo() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.EntryInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EntryInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EntryInfo::ArenaDtor(void* object) {
  EntryInfo* _this = reinterpret_cast< EntryInfo* >(object);
  (void)_this;
}
void EntryInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntryInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EntryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.EntryInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  directory_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_directory_) -
      reinterpret_cast<char*>(&size_)) + sizeof(is_directory_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntryInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string directory = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.EntryInfo.directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.EntryInfo.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_directory = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          is_directory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 last_modifying_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          last_modifying_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EntryInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.EntryInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (!this->_internal_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_directory().data(), static_cast<int>(this->_internal_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.EntryInfo.directory");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_directory(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.EntryInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_size(), target);
  }

  // bool is_directory = 4;
  if (this->_internal_is_directory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_directory(), target);
  }

  // int64 last_modifying_time = 5;
  if (this->_internal_last_modifying_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_last_modifying_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.EntryInfo)
  return target;
}

size_t EntryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.EntryInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string directory = 1;
  if (!this->_internal_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_directory());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_size());
  }

  // int64 last_modifying_time = 5;
  if (this->_internal_last_modifying_time() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_last_modifying_time());
  }

  // bool is_directory = 4;
  if (this->_internal_is_directory() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EntryInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EntryInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EntryInfo::GetClassData() const { return &_class_data_; }

void EntryInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EntryInfo *>(to)->MergeFrom(
      static_cast<const EntryInfo &>(from));
}


void EntryInfo::MergeFrom(const EntryInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.EntryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_directory().empty()) {
    _internal_set_directory(from._internal_directory());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from._internal_last_modifying_time() != 0) {
    _internal_set_last_modifying_time(from._internal_last_modifying_time());
  }
  if (from._internal_is_directory() != 0) {
    _internal_set_is_directory(from._internal_is_directory());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EntryInfo::CopyFrom(const EntryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.EntryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntryInfo::IsInitialized() const {
  return true;
}

void EntryInfo::InternalSwap(EntryInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &directory_, lhs_arena,
      &other->directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntryInfo, is_directory_)
      + sizeof(EntryInfo::is_directory_)
      - PROTOBUF_FIELD_OFFSET(EntryInfo, size_)>(
          reinterpret_cast<char*>(&size_),
          reinterpret_cast<char*>(&other->size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EntryInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[0]);
}

// ===================================================================

class RequestVisitFiles::_Internal {
 public:
};

RequestVisitFiles::RequestVisitFiles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestVisitFiles)
}
RequestVisitFiles::RequestVisitFiles(const RequestVisitFiles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  auth_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    auth_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_auth_string().empty()) {
    auth_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_auth_string(), 
      GetArenaForAllocation());
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestVisitFiles)
}

inline void RequestVisitFiles::SharedCtor() {
auth_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  auth_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_id_ = int64_t{0};
}

RequestVisitFiles::~RequestVisitFiles() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestVisitFiles)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestVisitFiles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  auth_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestVisitFiles::ArenaDtor(void* object) {
  RequestVisitFiles* _this = reinterpret_cast< RequestVisitFiles* >(object);
  (void)_this;
}
void RequestVisitFiles::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestVisitFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestVisitFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestVisitFiles)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_string_.ClearToEmpty();
  user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestVisitFiles::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string auth_string = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_auth_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestVisitFiles.auth_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestVisitFiles::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestVisitFiles)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string auth_string = 2;
  if (!this->_internal_auth_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_auth_string().data(), static_cast<int>(this->_internal_auth_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestVisitFiles.auth_string");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_auth_string(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestVisitFiles)
  return target;
}

size_t RequestVisitFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestVisitFiles)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string auth_string = 2;
  if (!this->_internal_auth_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_auth_string());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestVisitFiles::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestVisitFiles::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestVisitFiles::GetClassData() const { return &_class_data_; }

void RequestVisitFiles::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestVisitFiles *>(to)->MergeFrom(
      static_cast<const RequestVisitFiles &>(from));
}


void RequestVisitFiles::MergeFrom(const RequestVisitFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestVisitFiles)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_auth_string().empty()) {
    _internal_set_auth_string(from._internal_auth_string());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVisitFiles::CopyFrom(const RequestVisitFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestVisitFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestVisitFiles::IsInitialized() const {
  return true;
}

void RequestVisitFiles::InternalSwap(RequestVisitFiles* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &auth_string_, lhs_arena,
      &other->auth_string_, rhs_arena
  );
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestVisitFiles::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[1]);
}

// ===================================================================

class ResponseVisitFiles::_Internal {
 public:
};

ResponseVisitFiles::ResponseVisitFiles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  default_dirs_(arena),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseVisitFiles)
}
ResponseVisitFiles::ResponseVisitFiles(const ResponseVisitFiles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      default_dirs_(from.default_dirs_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseVisitFiles)
}

inline void ResponseVisitFiles::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
err_code_ = 0;
}

ResponseVisitFiles::~ResponseVisitFiles() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseVisitFiles)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseVisitFiles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseVisitFiles::ArenaDtor(void* object) {
  ResponseVisitFiles* _this = reinterpret_cast< ResponseVisitFiles* >(object);
  (void)_this;
}
void ResponseVisitFiles::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseVisitFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseVisitFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseVisitFiles)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  default_dirs_.Clear();
  entries_.Clear();
  err_string_.ClearToEmpty();
  err_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseVisitFiles::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseVisitFiles.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string default_dirs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_default_dirs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseVisitFiles.default_dirs"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Global.Protocol.File.EntryInfo entries = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseVisitFiles::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseVisitFiles)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_string = 2;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseVisitFiles.err_string");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_string(), target);
  }

  // repeated string default_dirs = 3;
  for (int i = 0, n = this->_internal_default_dirs_size(); i < n; i++) {
    const auto& s = this->_internal_default_dirs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseVisitFiles.default_dirs");
    target = stream->WriteString(3, s, target);
  }

  // repeated .Global.Protocol.File.EntryInfo entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseVisitFiles)
  return target;
}

size_t ResponseVisitFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseVisitFiles)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string default_dirs = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(default_dirs_.size());
  for (int i = 0, n = default_dirs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      default_dirs_.Get(i));
  }

  // repeated .Global.Protocol.File.EntryInfo entries = 4;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string err_string = 2;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseVisitFiles::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseVisitFiles::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseVisitFiles::GetClassData() const { return &_class_data_; }

void ResponseVisitFiles::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseVisitFiles *>(to)->MergeFrom(
      static_cast<const ResponseVisitFiles &>(from));
}


void ResponseVisitFiles::MergeFrom(const ResponseVisitFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseVisitFiles)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  default_dirs_.MergeFrom(from.default_dirs_);
  entries_.MergeFrom(from.entries_);
  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseVisitFiles::CopyFrom(const ResponseVisitFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseVisitFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseVisitFiles::IsInitialized() const {
  return true;
}

void ResponseVisitFiles::InternalSwap(ResponseVisitFiles* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  default_dirs_.InternalSwap(&other->default_dirs_);
  entries_.InternalSwap(&other->entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseVisitFiles::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[2]);
}

// ===================================================================

class RequestVisitFiles2::_Internal {
 public:
};

RequestVisitFiles2::RequestVisitFiles2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestVisitFiles2)
}
RequestVisitFiles2::RequestVisitFiles2(const RequestVisitFiles2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  auth_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    auth_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_auth_string().empty()) {
    auth_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_auth_string(), 
      GetArenaForAllocation());
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&async_task_certificate_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(async_task_certificate_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestVisitFiles2)
}

inline void RequestVisitFiles2::SharedCtor() {
auth_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  auth_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&async_task_certificate_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(async_task_certificate_));
}

RequestVisitFiles2::~RequestVisitFiles2() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestVisitFiles2)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestVisitFiles2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  auth_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestVisitFiles2::ArenaDtor(void* object) {
  RequestVisitFiles2* _this = reinterpret_cast< RequestVisitFiles2* >(object);
  (void)_this;
}
void RequestVisitFiles2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestVisitFiles2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestVisitFiles2::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestVisitFiles2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_string_.ClearToEmpty();
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&async_task_certificate_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(async_task_certificate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestVisitFiles2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 async_task_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          async_task_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 async_task_certificate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          async_task_certificate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string auth_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_auth_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestVisitFiles2.auth_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestVisitFiles2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestVisitFiles2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // uint64 async_task_id = 2;
  if (this->_internal_async_task_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_async_task_id(), target);
  }

  // uint32 async_task_certificate = 3;
  if (this->_internal_async_task_certificate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_async_task_certificate(), target);
  }

  // string auth_string = 4;
  if (!this->_internal_auth_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_auth_string().data(), static_cast<int>(this->_internal_auth_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestVisitFiles2.auth_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_auth_string(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestVisitFiles2)
  return target;
}

size_t RequestVisitFiles2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestVisitFiles2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string auth_string = 4;
  if (!this->_internal_auth_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_auth_string());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // uint64 async_task_id = 2;
  if (this->_internal_async_task_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_async_task_id());
  }

  // uint32 async_task_certificate = 3;
  if (this->_internal_async_task_certificate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_async_task_certificate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestVisitFiles2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestVisitFiles2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestVisitFiles2::GetClassData() const { return &_class_data_; }

void RequestVisitFiles2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestVisitFiles2 *>(to)->MergeFrom(
      static_cast<const RequestVisitFiles2 &>(from));
}


void RequestVisitFiles2::MergeFrom(const RequestVisitFiles2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestVisitFiles2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_auth_string().empty()) {
    _internal_set_auth_string(from._internal_auth_string());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_async_task_id() != 0) {
    _internal_set_async_task_id(from._internal_async_task_id());
  }
  if (from._internal_async_task_certificate() != 0) {
    _internal_set_async_task_certificate(from._internal_async_task_certificate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVisitFiles2::CopyFrom(const RequestVisitFiles2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestVisitFiles2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestVisitFiles2::IsInitialized() const {
  return true;
}

void RequestVisitFiles2::InternalSwap(RequestVisitFiles2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &auth_string_, lhs_arena,
      &other->auth_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVisitFiles2, async_task_certificate_)
      + sizeof(RequestVisitFiles2::async_task_certificate_)
      - PROTOBUF_FIELD_OFFSET(RequestVisitFiles2, user_id_)>(
          reinterpret_cast<char*>(&user_id_),
          reinterpret_cast<char*>(&other->user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestVisitFiles2::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[3]);
}

// ===================================================================

class ResponseVisitFiles2::_Internal {
 public:
};

ResponseVisitFiles2::ResponseVisitFiles2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  default_dirs_(arena),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseVisitFiles2)
}
ResponseVisitFiles2::ResponseVisitFiles2(const ResponseVisitFiles2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      default_dirs_(from.default_dirs_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  ::memcpy(&async_task_id_, &from.async_task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&async_task_id_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseVisitFiles2)
}

inline void ResponseVisitFiles2::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&async_task_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&async_task_id_)) + sizeof(err_code_));
}

ResponseVisitFiles2::~ResponseVisitFiles2() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseVisitFiles2)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseVisitFiles2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseVisitFiles2::ArenaDtor(void* object) {
  ResponseVisitFiles2* _this = reinterpret_cast< ResponseVisitFiles2* >(object);
  (void)_this;
}
void ResponseVisitFiles2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseVisitFiles2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseVisitFiles2::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseVisitFiles2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  default_dirs_.Clear();
  entries_.Clear();
  err_string_.ClearToEmpty();
  ::memset(&async_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&async_task_id_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseVisitFiles2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 async_task_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          async_task_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 async_task_certificate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          async_task_certificate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseVisitFiles2.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string default_dirs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_default_dirs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseVisitFiles2.default_dirs"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Global.Protocol.File.EntryInfo entries = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseVisitFiles2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseVisitFiles2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 async_task_id = 1;
  if (this->_internal_async_task_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_async_task_id(), target);
  }

  // uint32 async_task_certificate = 2;
  if (this->_internal_async_task_certificate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_async_task_certificate(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseVisitFiles2.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // repeated string default_dirs = 5;
  for (int i = 0, n = this->_internal_default_dirs_size(); i < n; i++) {
    const auto& s = this->_internal_default_dirs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseVisitFiles2.default_dirs");
    target = stream->WriteString(5, s, target);
  }

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseVisitFiles2)
  return target;
}

size_t ResponseVisitFiles2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseVisitFiles2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string default_dirs = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(default_dirs_.size());
  for (int i = 0, n = default_dirs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      default_dirs_.Get(i));
  }

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // uint64 async_task_id = 1;
  if (this->_internal_async_task_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_async_task_id());
  }

  // uint32 async_task_certificate = 2;
  if (this->_internal_async_task_certificate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_async_task_certificate());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseVisitFiles2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseVisitFiles2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseVisitFiles2::GetClassData() const { return &_class_data_; }

void ResponseVisitFiles2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseVisitFiles2 *>(to)->MergeFrom(
      static_cast<const ResponseVisitFiles2 &>(from));
}


void ResponseVisitFiles2::MergeFrom(const ResponseVisitFiles2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseVisitFiles2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  default_dirs_.MergeFrom(from.default_dirs_);
  entries_.MergeFrom(from.entries_);
  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (from._internal_async_task_id() != 0) {
    _internal_set_async_task_id(from._internal_async_task_id());
  }
  if (from._internal_async_task_certificate() != 0) {
    _internal_set_async_task_certificate(from._internal_async_task_certificate());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseVisitFiles2::CopyFrom(const ResponseVisitFiles2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseVisitFiles2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseVisitFiles2::IsInitialized() const {
  return true;
}

void ResponseVisitFiles2::InternalSwap(ResponseVisitFiles2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  default_dirs_.InternalSwap(&other->default_dirs_);
  entries_.InternalSwap(&other->entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseVisitFiles2, err_code_)
      + sizeof(ResponseVisitFiles2::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseVisitFiles2, async_task_id_)>(
          reinterpret_cast<char*>(&async_task_id_),
          reinterpret_cast<char*>(&other->async_task_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseVisitFiles2::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[4]);
}

// ===================================================================

class RequestMakeDirectory::_Internal {
 public:
};

RequestMakeDirectory::RequestMakeDirectory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestMakeDirectory)
}
RequestMakeDirectory::RequestMakeDirectory(const RequestMakeDirectory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestMakeDirectory)
}

inline void RequestMakeDirectory::SharedCtor() {
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
}

RequestMakeDirectory::~RequestMakeDirectory() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestMakeDirectory)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestMakeDirectory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestMakeDirectory::ArenaDtor(void* object) {
  RequestMakeDirectory* _this = reinterpret_cast< RequestMakeDirectory* >(object);
  (void)_this;
}
void RequestMakeDirectory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestMakeDirectory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestMakeDirectory::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestMakeDirectory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestMakeDirectory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestMakeDirectory.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestMakeDirectory.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestMakeDirectory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestMakeDirectory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestMakeDirectory.dir");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dir(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestMakeDirectory.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestMakeDirectory)
  return target;
}

size_t RequestMakeDirectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestMakeDirectory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestMakeDirectory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestMakeDirectory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestMakeDirectory::GetClassData() const { return &_class_data_; }

void RequestMakeDirectory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestMakeDirectory *>(to)->MergeFrom(
      static_cast<const RequestMakeDirectory &>(from));
}


void RequestMakeDirectory::MergeFrom(const RequestMakeDirectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestMakeDirectory)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestMakeDirectory::CopyFrom(const RequestMakeDirectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestMakeDirectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMakeDirectory::IsInitialized() const {
  return true;
}

void RequestMakeDirectory::InternalSwap(RequestMakeDirectory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestMakeDirectory, user_id_)
      + sizeof(RequestMakeDirectory::user_id_)
      - PROTOBUF_FIELD_OFFSET(RequestMakeDirectory, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestMakeDirectory::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[5]);
}

// ===================================================================

class ResponseMakeDirectory::_Internal {
 public:
};

ResponseMakeDirectory::ResponseMakeDirectory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseMakeDirectory)
}
ResponseMakeDirectory::ResponseMakeDirectory(const ResponseMakeDirectory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  last_modifying_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    last_modifying_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_modifying_time().empty()) {
    last_modifying_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_modifying_time(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseMakeDirectory)
}

inline void ResponseMakeDirectory::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
last_modifying_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  last_modifying_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
}

ResponseMakeDirectory::~ResponseMakeDirectory() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseMakeDirectory)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseMakeDirectory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_modifying_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseMakeDirectory::ArenaDtor(void* object) {
  ResponseMakeDirectory* _this = reinterpret_cast< ResponseMakeDirectory* >(object);
  (void)_this;
}
void ResponseMakeDirectory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseMakeDirectory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseMakeDirectory::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseMakeDirectory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_string_.ClearToEmpty();
  dir_.ClearToEmpty();
  name_.ClearToEmpty();
  last_modifying_time_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseMakeDirectory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseMakeDirectory.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseMakeDirectory.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseMakeDirectory.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string last_modifying_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_last_modifying_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseMakeDirectory.last_modifying_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseMakeDirectory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseMakeDirectory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseMakeDirectory.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseMakeDirectory.dir");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dir(), target);
  }

  // string name = 6;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseMakeDirectory.name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_name(), target);
  }

  // string last_modifying_time = 7;
  if (!this->_internal_last_modifying_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_modifying_time().data(), static_cast<int>(this->_internal_last_modifying_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseMakeDirectory.last_modifying_time");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_last_modifying_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseMakeDirectory)
  return target;
}

size_t ResponseMakeDirectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseMakeDirectory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // string name = 6;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string last_modifying_time = 7;
  if (!this->_internal_last_modifying_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_modifying_time());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseMakeDirectory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseMakeDirectory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseMakeDirectory::GetClassData() const { return &_class_data_; }

void ResponseMakeDirectory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseMakeDirectory *>(to)->MergeFrom(
      static_cast<const ResponseMakeDirectory &>(from));
}


void ResponseMakeDirectory::MergeFrom(const ResponseMakeDirectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseMakeDirectory)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_last_modifying_time().empty()) {
    _internal_set_last_modifying_time(from._internal_last_modifying_time());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseMakeDirectory::CopyFrom(const ResponseMakeDirectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseMakeDirectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMakeDirectory::IsInitialized() const {
  return true;
}

void ResponseMakeDirectory::InternalSwap(ResponseMakeDirectory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &last_modifying_time_, lhs_arena,
      &other->last_modifying_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseMakeDirectory, err_code_)
      + sizeof(ResponseMakeDirectory::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseMakeDirectory, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseMakeDirectory::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[6]);
}

// ===================================================================

class RequestDeleteEntry::_Internal {
 public:
};

RequestDeleteEntry::RequestDeleteEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestDeleteEntry)
}
RequestDeleteEntry::RequestDeleteEntry(const RequestDeleteEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestDeleteEntry)
}

inline void RequestDeleteEntry::SharedCtor() {
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
}

RequestDeleteEntry::~RequestDeleteEntry() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestDeleteEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestDeleteEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestDeleteEntry::ArenaDtor(void* object) {
  RequestDeleteEntry* _this = reinterpret_cast< RequestDeleteEntry* >(object);
  (void)_this;
}
void RequestDeleteEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestDeleteEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestDeleteEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestDeleteEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestDeleteEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestDeleteEntry.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestDeleteEntry.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestDeleteEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestDeleteEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestDeleteEntry.dir");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dir(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestDeleteEntry.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestDeleteEntry)
  return target;
}

size_t RequestDeleteEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestDeleteEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestDeleteEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestDeleteEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestDeleteEntry::GetClassData() const { return &_class_data_; }

void RequestDeleteEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestDeleteEntry *>(to)->MergeFrom(
      static_cast<const RequestDeleteEntry &>(from));
}


void RequestDeleteEntry::MergeFrom(const RequestDeleteEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestDeleteEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestDeleteEntry::CopyFrom(const RequestDeleteEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestDeleteEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestDeleteEntry::IsInitialized() const {
  return true;
}

void RequestDeleteEntry::InternalSwap(RequestDeleteEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestDeleteEntry, user_id_)
      + sizeof(RequestDeleteEntry::user_id_)
      - PROTOBUF_FIELD_OFFSET(RequestDeleteEntry, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestDeleteEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[7]);
}

// ===================================================================

class ResponseDeleteEntry::_Internal {
 public:
};

ResponseDeleteEntry::ResponseDeleteEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseDeleteEntry)
}
ResponseDeleteEntry::ResponseDeleteEntry(const ResponseDeleteEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseDeleteEntry)
}

inline void ResponseDeleteEntry::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
}

ResponseDeleteEntry::~ResponseDeleteEntry() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseDeleteEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseDeleteEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseDeleteEntry::ArenaDtor(void* object) {
  ResponseDeleteEntry* _this = reinterpret_cast< ResponseDeleteEntry* >(object);
  (void)_this;
}
void ResponseDeleteEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseDeleteEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseDeleteEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseDeleteEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_string_.ClearToEmpty();
  dir_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseDeleteEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseDeleteEntry.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseDeleteEntry.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseDeleteEntry.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseDeleteEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseDeleteEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseDeleteEntry.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseDeleteEntry.dir");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dir(), target);
  }

  // string name = 6;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseDeleteEntry.name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseDeleteEntry)
  return target;
}

size_t ResponseDeleteEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseDeleteEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // string name = 6;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseDeleteEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseDeleteEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseDeleteEntry::GetClassData() const { return &_class_data_; }

void ResponseDeleteEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseDeleteEntry *>(to)->MergeFrom(
      static_cast<const ResponseDeleteEntry &>(from));
}


void ResponseDeleteEntry::MergeFrom(const ResponseDeleteEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseDeleteEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseDeleteEntry::CopyFrom(const ResponseDeleteEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseDeleteEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseDeleteEntry::IsInitialized() const {
  return true;
}

void ResponseDeleteEntry::InternalSwap(ResponseDeleteEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseDeleteEntry, err_code_)
      + sizeof(ResponseDeleteEntry::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseDeleteEntry, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseDeleteEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[8]);
}

// ===================================================================

class RequestRenameEntry::_Internal {
 public:
};

RequestRenameEntry::RequestRenameEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestRenameEntry)
}
RequestRenameEntry::RequestRenameEntry(const RequestRenameEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  old_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    old_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_old_name().empty()) {
    old_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_old_name(), 
      GetArenaForAllocation());
  }
  new_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    new_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_name().empty()) {
    new_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_new_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestRenameEntry)
}

inline void RequestRenameEntry::SharedCtor() {
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
old_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  old_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
new_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  new_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
}

RequestRenameEntry::~RequestRenameEntry() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestRenameEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestRenameEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestRenameEntry::ArenaDtor(void* object) {
  RequestRenameEntry* _this = reinterpret_cast< RequestRenameEntry* >(object);
  (void)_this;
}
void RequestRenameEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestRenameEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestRenameEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestRenameEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.ClearToEmpty();
  old_name_.ClearToEmpty();
  new_name_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestRenameEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestRenameEntry.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string old_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_old_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestRenameEntry.old_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string new_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_new_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestRenameEntry.new_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestRenameEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestRenameEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestRenameEntry.dir");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dir(), target);
  }

  // string old_name = 4;
  if (!this->_internal_old_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_old_name().data(), static_cast<int>(this->_internal_old_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestRenameEntry.old_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_old_name(), target);
  }

  // string new_name = 5;
  if (!this->_internal_new_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_name().data(), static_cast<int>(this->_internal_new_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestRenameEntry.new_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_new_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestRenameEntry)
  return target;
}

size_t RequestRenameEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestRenameEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // string old_name = 4;
  if (!this->_internal_old_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_old_name());
  }

  // string new_name = 5;
  if (!this->_internal_new_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_name());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestRenameEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestRenameEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestRenameEntry::GetClassData() const { return &_class_data_; }

void RequestRenameEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestRenameEntry *>(to)->MergeFrom(
      static_cast<const RequestRenameEntry &>(from));
}


void RequestRenameEntry::MergeFrom(const RequestRenameEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestRenameEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (!from._internal_old_name().empty()) {
    _internal_set_old_name(from._internal_old_name());
  }
  if (!from._internal_new_name().empty()) {
    _internal_set_new_name(from._internal_new_name());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestRenameEntry::CopyFrom(const RequestRenameEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestRenameEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestRenameEntry::IsInitialized() const {
  return true;
}

void RequestRenameEntry::InternalSwap(RequestRenameEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &old_name_, lhs_arena,
      &other->old_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &new_name_, lhs_arena,
      &other->new_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestRenameEntry, user_id_)
      + sizeof(RequestRenameEntry::user_id_)
      - PROTOBUF_FIELD_OFFSET(RequestRenameEntry, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestRenameEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[9]);
}

// ===================================================================

class ResponseRenameEntry::_Internal {
 public:
};

ResponseRenameEntry::ResponseRenameEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseRenameEntry)
}
ResponseRenameEntry::ResponseRenameEntry(const ResponseRenameEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  old_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    old_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_old_name().empty()) {
    old_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_old_name(), 
      GetArenaForAllocation());
  }
  new_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    new_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_name().empty()) {
    new_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_new_name(), 
      GetArenaForAllocation());
  }
  last_modifying_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    last_modifying_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_modifying_time().empty()) {
    last_modifying_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_modifying_time(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseRenameEntry)
}

inline void ResponseRenameEntry::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
old_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  old_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
new_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  new_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
last_modifying_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  last_modifying_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
}

ResponseRenameEntry::~ResponseRenameEntry() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseRenameEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseRenameEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_modifying_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseRenameEntry::ArenaDtor(void* object) {
  ResponseRenameEntry* _this = reinterpret_cast< ResponseRenameEntry* >(object);
  (void)_this;
}
void ResponseRenameEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseRenameEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseRenameEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseRenameEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_string_.ClearToEmpty();
  dir_.ClearToEmpty();
  old_name_.ClearToEmpty();
  new_name_.ClearToEmpty();
  last_modifying_time_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseRenameEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseRenameEntry.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseRenameEntry.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string old_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_old_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseRenameEntry.old_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string new_name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_new_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseRenameEntry.new_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string last_modifying_time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_last_modifying_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseRenameEntry.last_modifying_time"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseRenameEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseRenameEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseRenameEntry.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseRenameEntry.dir");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dir(), target);
  }

  // string old_name = 6;
  if (!this->_internal_old_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_old_name().data(), static_cast<int>(this->_internal_old_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseRenameEntry.old_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_old_name(), target);
  }

  // string new_name = 7;
  if (!this->_internal_new_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_name().data(), static_cast<int>(this->_internal_new_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseRenameEntry.new_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_new_name(), target);
  }

  // string last_modifying_time = 8;
  if (!this->_internal_last_modifying_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_modifying_time().data(), static_cast<int>(this->_internal_last_modifying_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseRenameEntry.last_modifying_time");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_last_modifying_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseRenameEntry)
  return target;
}

size_t ResponseRenameEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseRenameEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // string old_name = 6;
  if (!this->_internal_old_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_old_name());
  }

  // string new_name = 7;
  if (!this->_internal_new_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_name());
  }

  // string last_modifying_time = 8;
  if (!this->_internal_last_modifying_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_modifying_time());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseRenameEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseRenameEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseRenameEntry::GetClassData() const { return &_class_data_; }

void ResponseRenameEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseRenameEntry *>(to)->MergeFrom(
      static_cast<const ResponseRenameEntry &>(from));
}


void ResponseRenameEntry::MergeFrom(const ResponseRenameEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseRenameEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (!from._internal_old_name().empty()) {
    _internal_set_old_name(from._internal_old_name());
  }
  if (!from._internal_new_name().empty()) {
    _internal_set_new_name(from._internal_new_name());
  }
  if (!from._internal_last_modifying_time().empty()) {
    _internal_set_last_modifying_time(from._internal_last_modifying_time());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseRenameEntry::CopyFrom(const ResponseRenameEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseRenameEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseRenameEntry::IsInitialized() const {
  return true;
}

void ResponseRenameEntry::InternalSwap(ResponseRenameEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &old_name_, lhs_arena,
      &other->old_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &new_name_, lhs_arena,
      &other->new_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &last_modifying_time_, lhs_arena,
      &other->last_modifying_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseRenameEntry, err_code_)
      + sizeof(ResponseRenameEntry::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseRenameEntry, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseRenameEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[10]);
}

// ===================================================================

class RequestGoUp::_Internal {
 public:
};

RequestGoUp::RequestGoUp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestGoUp)
}
RequestGoUp::RequestGoUp(const RequestGoUp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestGoUp)
}

inline void RequestGoUp::SharedCtor() {
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
}

RequestGoUp::~RequestGoUp() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestGoUp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestGoUp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestGoUp::ArenaDtor(void* object) {
  RequestGoUp* _this = reinterpret_cast< RequestGoUp* >(object);
  (void)_this;
}
void RequestGoUp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestGoUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestGoUp::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestGoUp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestGoUp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestGoUp.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestGoUp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestGoUp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestGoUp.dir");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestGoUp)
  return target;
}

size_t RequestGoUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestGoUp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestGoUp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestGoUp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestGoUp::GetClassData() const { return &_class_data_; }

void RequestGoUp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestGoUp *>(to)->MergeFrom(
      static_cast<const RequestGoUp &>(from));
}


void RequestGoUp::MergeFrom(const RequestGoUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestGoUp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestGoUp::CopyFrom(const RequestGoUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestGoUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestGoUp::IsInitialized() const {
  return true;
}

void RequestGoUp::InternalSwap(RequestGoUp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestGoUp, user_id_)
      + sizeof(RequestGoUp::user_id_)
      - PROTOBUF_FIELD_OFFSET(RequestGoUp, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestGoUp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[11]);
}

// ===================================================================

class ResponseGoUp::_Internal {
 public:
};

ResponseGoUp::ResponseGoUp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseGoUp)
}
ResponseGoUp::ResponseGoUp(const ResponseGoUp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseGoUp)
}

inline void ResponseGoUp::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
}

ResponseGoUp::~ResponseGoUp() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseGoUp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseGoUp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseGoUp::ArenaDtor(void* object) {
  ResponseGoUp* _this = reinterpret_cast< ResponseGoUp* >(object);
  (void)_this;
}
void ResponseGoUp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseGoUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseGoUp::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseGoUp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  err_string_.ClearToEmpty();
  dir_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseGoUp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseGoUp.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseGoUp.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Global.Protocol.File.EntryInfo entries = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseGoUp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseGoUp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseGoUp.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseGoUp.dir");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dir(), target);
  }

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseGoUp)
  return target;
}

size_t ResponseGoUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseGoUp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseGoUp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseGoUp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseGoUp::GetClassData() const { return &_class_data_; }

void ResponseGoUp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseGoUp *>(to)->MergeFrom(
      static_cast<const ResponseGoUp &>(from));
}


void ResponseGoUp::MergeFrom(const ResponseGoUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseGoUp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseGoUp::CopyFrom(const ResponseGoUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseGoUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseGoUp::IsInitialized() const {
  return true;
}

void ResponseGoUp::InternalSwap(ResponseGoUp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseGoUp, err_code_)
      + sizeof(ResponseGoUp::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseGoUp, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseGoUp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[12]);
}

// ===================================================================

class RequestGoHome::_Internal {
 public:
};

RequestGoHome::RequestGoHome(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestGoHome)
}
RequestGoHome::RequestGoHome(const RequestGoHome& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestGoHome)
}

inline void RequestGoHome::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
}

RequestGoHome::~RequestGoHome() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestGoHome)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestGoHome::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestGoHome::ArenaDtor(void* object) {
  RequestGoHome* _this = reinterpret_cast< RequestGoHome* >(object);
  (void)_this;
}
void RequestGoHome::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestGoHome::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestGoHome::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestGoHome)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestGoHome::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestGoHome::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestGoHome)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestGoHome)
  return target;
}

size_t RequestGoHome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestGoHome)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestGoHome::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestGoHome::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestGoHome::GetClassData() const { return &_class_data_; }

void RequestGoHome::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestGoHome *>(to)->MergeFrom(
      static_cast<const RequestGoHome &>(from));
}


void RequestGoHome::MergeFrom(const RequestGoHome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestGoHome)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestGoHome::CopyFrom(const RequestGoHome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestGoHome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestGoHome::IsInitialized() const {
  return true;
}

void RequestGoHome::InternalSwap(RequestGoHome* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestGoHome, user_id_)
      + sizeof(RequestGoHome::user_id_)
      - PROTOBUF_FIELD_OFFSET(RequestGoHome, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestGoHome::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[13]);
}

// ===================================================================

class ResponseGoHome::_Internal {
 public:
};

ResponseGoHome::ResponseGoHome(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseGoHome)
}
ResponseGoHome::ResponseGoHome(const ResponseGoHome& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseGoHome)
}

inline void ResponseGoHome::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
}

ResponseGoHome::~ResponseGoHome() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseGoHome)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseGoHome::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseGoHome::ArenaDtor(void* object) {
  ResponseGoHome* _this = reinterpret_cast< ResponseGoHome* >(object);
  (void)_this;
}
void ResponseGoHome::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseGoHome::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseGoHome::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseGoHome)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  err_string_.ClearToEmpty();
  dir_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseGoHome::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseGoHome.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseGoHome.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Global.Protocol.File.EntryInfo entries = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseGoHome::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseGoHome)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseGoHome.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseGoHome.dir");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dir(), target);
  }

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseGoHome)
  return target;
}

size_t ResponseGoHome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseGoHome)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseGoHome::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseGoHome::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseGoHome::GetClassData() const { return &_class_data_; }

void ResponseGoHome::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseGoHome *>(to)->MergeFrom(
      static_cast<const ResponseGoHome &>(from));
}


void ResponseGoHome::MergeFrom(const ResponseGoHome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseGoHome)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseGoHome::CopyFrom(const ResponseGoHome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseGoHome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseGoHome::IsInitialized() const {
  return true;
}

void ResponseGoHome::InternalSwap(ResponseGoHome* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseGoHome, err_code_)
      + sizeof(ResponseGoHome::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseGoHome, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseGoHome::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[14]);
}

// ===================================================================

class RequestListEntries::_Internal {
 public:
};

RequestListEntries::RequestListEntries(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestListEntries)
}
RequestListEntries::RequestListEntries(const RequestListEntries& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestListEntries)
}

inline void RequestListEntries::SharedCtor() {
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
}

RequestListEntries::~RequestListEntries() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestListEntries)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestListEntries::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestListEntries::ArenaDtor(void* object) {
  RequestListEntries* _this = reinterpret_cast< RequestListEntries* >(object);
  (void)_this;
}
void RequestListEntries::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestListEntries::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestListEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestListEntries)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestListEntries::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestListEntries.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestListEntries::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestListEntries)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestListEntries.dir");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestListEntries)
  return target;
}

size_t RequestListEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestListEntries)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dir = 3;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestListEntries::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestListEntries::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestListEntries::GetClassData() const { return &_class_data_; }

void RequestListEntries::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestListEntries *>(to)->MergeFrom(
      static_cast<const RequestListEntries &>(from));
}


void RequestListEntries::MergeFrom(const RequestListEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestListEntries)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestListEntries::CopyFrom(const RequestListEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestListEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestListEntries::IsInitialized() const {
  return true;
}

void RequestListEntries::InternalSwap(RequestListEntries* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestListEntries, user_id_)
      + sizeof(RequestListEntries::user_id_)
      - PROTOBUF_FIELD_OFFSET(RequestListEntries, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestListEntries::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[15]);
}

// ===================================================================

class ResponseListEntries::_Internal {
 public:
};

ResponseListEntries::ResponseListEntries(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseListEntries)
}
ResponseListEntries::ResponseListEntries(const ResponseListEntries& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dir().empty()) {
    dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dir(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseListEntries)
}

inline void ResponseListEntries::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
}

ResponseListEntries::~ResponseListEntries() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseListEntries)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseListEntries::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseListEntries::ArenaDtor(void* object) {
  ResponseListEntries* _this = reinterpret_cast< ResponseListEntries* >(object);
  (void)_this;
}
void ResponseListEntries::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseListEntries::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseListEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseListEntries)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  err_string_.ClearToEmpty();
  dir_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseListEntries::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseListEntries.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseListEntries.dir"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Global.Protocol.File.EntryInfo entries = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseListEntries::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseListEntries)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseListEntries.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dir().data(), static_cast<int>(this->_internal_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseListEntries.dir");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dir(), target);
  }

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseListEntries)
  return target;
}

size_t ResponseListEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseListEntries)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Global.Protocol.File.EntryInfo entries = 6;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string dir = 5;
  if (!this->_internal_dir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dir());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseListEntries::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseListEntries::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseListEntries::GetClassData() const { return &_class_data_; }

void ResponseListEntries::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseListEntries *>(to)->MergeFrom(
      static_cast<const ResponseListEntries &>(from));
}


void ResponseListEntries::MergeFrom(const ResponseListEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseListEntries)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_dir().empty()) {
    _internal_set_dir(from._internal_dir());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseListEntries::CopyFrom(const ResponseListEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseListEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseListEntries::IsInitialized() const {
  return true;
}

void ResponseListEntries::InternalSwap(ResponseListEntries* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dir_, lhs_arena,
      &other->dir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseListEntries, err_code_)
      + sizeof(ResponseListEntries::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseListEntries, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseListEntries::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[16]);
}

// ===================================================================

class RequestOpenFile::_Internal {
 public:
};

RequestOpenFile::RequestOpenFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestOpenFile)
}
RequestOpenFile::RequestOpenFile(const RequestOpenFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_id().empty()) {
    task_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_task_id(), 
      GetArenaForAllocation());
  }
  directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    directory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_directory().empty()) {
    directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_directory(), 
      GetArenaForAllocation());
  }
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_name().empty()) {
    file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&seek_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(seek_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestOpenFile)
}

inline void RequestOpenFile::SharedCtor() {
task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  directory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&seek_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(seek_));
}

RequestOpenFile::~RequestOpenFile() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestOpenFile)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestOpenFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  task_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestOpenFile::ArenaDtor(void* object) {
  RequestOpenFile* _this = reinterpret_cast< RequestOpenFile* >(object);
  (void)_this;
}
void RequestOpenFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestOpenFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestOpenFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestOpenFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_id_.ClearToEmpty();
  directory_.ClearToEmpty();
  file_name_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seek_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(seek_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestOpenFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string task_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_task_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestOpenFile.task_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 mode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string directory = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestOpenFile.directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string file_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestOpenFile.file_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 file_size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 seek = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          seek_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool force = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          force_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestOpenFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestOpenFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string task_id = 3;
  if (!this->_internal_task_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_id().data(), static_cast<int>(this->_internal_task_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestOpenFile.task_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_task_id(), target);
  }

  // int32 mode = 4;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_mode(), target);
  }

  // string directory = 5;
  if (!this->_internal_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_directory().data(), static_cast<int>(this->_internal_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestOpenFile.directory");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_directory(), target);
  }

  // string file_name = 6;
  if (!this->_internal_file_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestOpenFile.file_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_file_name(), target);
  }

  // uint64 file_size = 7;
  if (this->_internal_file_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_file_size(), target);
  }

  // uint64 seek = 8;
  if (this->_internal_seek() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_seek(), target);
  }

  // bool force = 9;
  if (this->_internal_force() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_force(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestOpenFile)
  return target;
}

size_t RequestOpenFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestOpenFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 3;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_id());
  }

  // string directory = 5;
  if (!this->_internal_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_directory());
  }

  // string file_name = 6;
  if (!this->_internal_file_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_name());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 mode = 4;
  if (this->_internal_mode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_mode());
  }

  // bool force = 9;
  if (this->_internal_force() != 0) {
    total_size += 1 + 1;
  }

  // uint64 file_size = 7;
  if (this->_internal_file_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_file_size());
  }

  // uint64 seek = 8;
  if (this->_internal_seek() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_seek());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestOpenFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestOpenFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestOpenFile::GetClassData() const { return &_class_data_; }

void RequestOpenFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestOpenFile *>(to)->MergeFrom(
      static_cast<const RequestOpenFile &>(from));
}


void RequestOpenFile::MergeFrom(const RequestOpenFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestOpenFile)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_directory().empty()) {
    _internal_set_directory(from._internal_directory());
  }
  if (!from._internal_file_name().empty()) {
    _internal_set_file_name(from._internal_file_name());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from._internal_force() != 0) {
    _internal_set_force(from._internal_force());
  }
  if (from._internal_file_size() != 0) {
    _internal_set_file_size(from._internal_file_size());
  }
  if (from._internal_seek() != 0) {
    _internal_set_seek(from._internal_seek());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestOpenFile::CopyFrom(const RequestOpenFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestOpenFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestOpenFile::IsInitialized() const {
  return true;
}

void RequestOpenFile::InternalSwap(RequestOpenFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &task_id_, lhs_arena,
      &other->task_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &directory_, lhs_arena,
      &other->directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &file_name_, lhs_arena,
      &other->file_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestOpenFile, seek_)
      + sizeof(RequestOpenFile::seek_)
      - PROTOBUF_FIELD_OFFSET(RequestOpenFile, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestOpenFile::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[17]);
}

// ===================================================================

class ResponseOpenFile::_Internal {
 public:
};

ResponseOpenFile::ResponseOpenFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseOpenFile)
}
ResponseOpenFile::ResponseOpenFile(const ResponseOpenFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_id().empty()) {
    task_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_task_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseOpenFile)
}

inline void ResponseOpenFile::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
}

ResponseOpenFile::~ResponseOpenFile() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseOpenFile)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseOpenFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseOpenFile::ArenaDtor(void* object) {
  ResponseOpenFile* _this = reinterpret_cast< ResponseOpenFile* >(object);
  (void)_this;
}
void ResponseOpenFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseOpenFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseOpenFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseOpenFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_string_.ClearToEmpty();
  task_id_.ClearToEmpty();
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseOpenFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 err_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseOpenFile.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string task_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_task_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseOpenFile.task_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseOpenFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseOpenFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_seq(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_err_code(), target);
  }

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseOpenFile.err_string");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_err_string(), target);
  }

  // string task_id = 5;
  if (!this->_internal_task_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_id().data(), static_cast<int>(this->_internal_task_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseOpenFile.task_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_task_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseOpenFile)
  return target;
}

size_t ResponseOpenFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseOpenFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_string = 4;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string task_id = 5;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_id());
  }

  // int64 seq = 1;
  if (this->_internal_seq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_seq());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 err_code = 3;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseOpenFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseOpenFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseOpenFile::GetClassData() const { return &_class_data_; }

void ResponseOpenFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseOpenFile *>(to)->MergeFrom(
      static_cast<const ResponseOpenFile &>(from));
}


void ResponseOpenFile::MergeFrom(const ResponseOpenFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseOpenFile)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_task_id().empty()) {
    _internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseOpenFile::CopyFrom(const ResponseOpenFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseOpenFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseOpenFile::IsInitialized() const {
  return true;
}

void ResponseOpenFile::InternalSwap(ResponseOpenFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &task_id_, lhs_arena,
      &other->task_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseOpenFile, err_code_)
      + sizeof(ResponseOpenFile::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseOpenFile, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseOpenFile::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[18]);
}

// ===================================================================

class RequestWriteFileBlock::_Internal {
 public:
};

RequestWriteFileBlock::RequestWriteFileBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestWriteFileBlock)
}
RequestWriteFileBlock::RequestWriteFileBlock(const RequestWriteFileBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_id().empty()) {
    task_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_task_id(), 
      GetArenaForAllocation());
  }
  compressed_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    compressed_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_compressed_data().empty()) {
    compressed_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_compressed_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&raw_data_len_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(raw_data_len_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestWriteFileBlock)
}

inline void RequestWriteFileBlock::SharedCtor() {
task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
compressed_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  compressed_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&raw_data_len_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(raw_data_len_));
}

RequestWriteFileBlock::~RequestWriteFileBlock() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestWriteFileBlock)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestWriteFileBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  task_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  compressed_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestWriteFileBlock::ArenaDtor(void* object) {
  RequestWriteFileBlock* _this = reinterpret_cast< RequestWriteFileBlock* >(object);
  (void)_this;
}
void RequestWriteFileBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestWriteFileBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestWriteFileBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestWriteFileBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_id_.ClearToEmpty();
  compressed_data_.ClearToEmpty();
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raw_data_len_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(raw_data_len_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestWriteFileBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string task_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestWriteFileBlock.task_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 seek = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          seek_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 raw_data_len = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          raw_data_len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes compressed_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_compressed_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestWriteFileBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestWriteFileBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string task_id = 2;
  if (!this->_internal_task_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_id().data(), static_cast<int>(this->_internal_task_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestWriteFileBlock.task_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task_id(), target);
  }

  // uint64 seek = 3;
  if (this->_internal_seek() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_seek(), target);
  }

  // uint32 raw_data_len = 4;
  if (this->_internal_raw_data_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_raw_data_len(), target);
  }

  // bytes compressed_data = 5;
  if (!this->_internal_compressed_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_compressed_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestWriteFileBlock)
  return target;
}

size_t RequestWriteFileBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestWriteFileBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 2;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_id());
  }

  // bytes compressed_data = 5;
  if (!this->_internal_compressed_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_compressed_data());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // uint64 seek = 3;
  if (this->_internal_seek() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_seek());
  }

  // uint32 raw_data_len = 4;
  if (this->_internal_raw_data_len() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_raw_data_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestWriteFileBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestWriteFileBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestWriteFileBlock::GetClassData() const { return &_class_data_; }

void RequestWriteFileBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestWriteFileBlock *>(to)->MergeFrom(
      static_cast<const RequestWriteFileBlock &>(from));
}


void RequestWriteFileBlock::MergeFrom(const RequestWriteFileBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestWriteFileBlock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_compressed_data().empty()) {
    _internal_set_compressed_data(from._internal_compressed_data());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_seek() != 0) {
    _internal_set_seek(from._internal_seek());
  }
  if (from._internal_raw_data_len() != 0) {
    _internal_set_raw_data_len(from._internal_raw_data_len());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestWriteFileBlock::CopyFrom(const RequestWriteFileBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestWriteFileBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestWriteFileBlock::IsInitialized() const {
  return true;
}

void RequestWriteFileBlock::InternalSwap(RequestWriteFileBlock* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &task_id_, lhs_arena,
      &other->task_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &compressed_data_, lhs_arena,
      &other->compressed_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestWriteFileBlock, raw_data_len_)
      + sizeof(RequestWriteFileBlock::raw_data_len_)
      - PROTOBUF_FIELD_OFFSET(RequestWriteFileBlock, user_id_)>(
          reinterpret_cast<char*>(&user_id_),
          reinterpret_cast<char*>(&other->user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestWriteFileBlock::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[19]);
}

// ===================================================================

class ResponseWriteFileBlock::_Internal {
 public:
};

ResponseWriteFileBlock::ResponseWriteFileBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseWriteFileBlock)
}
ResponseWriteFileBlock::ResponseWriteFileBlock(const ResponseWriteFileBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_id().empty()) {
    task_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_task_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseWriteFileBlock)
}

inline void ResponseWriteFileBlock::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(err_code_));
}

ResponseWriteFileBlock::~ResponseWriteFileBlock() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseWriteFileBlock)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseWriteFileBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseWriteFileBlock::ArenaDtor(void* object) {
  ResponseWriteFileBlock* _this = reinterpret_cast< ResponseWriteFileBlock* >(object);
  (void)_this;
}
void ResponseWriteFileBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseWriteFileBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseWriteFileBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseWriteFileBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_string_.ClearToEmpty();
  task_id_.ClearToEmpty();
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(err_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseWriteFileBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseWriteFileBlock.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string task_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_task_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseWriteFileBlock.task_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 after_seek = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          after_seek_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseWriteFileBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseWriteFileBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_string = 2;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseWriteFileBlock.err_string");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_string(), target);
  }

  // string task_id = 3;
  if (!this->_internal_task_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_id().data(), static_cast<int>(this->_internal_task_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseWriteFileBlock.task_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_task_id(), target);
  }

  // int64 user_id = 4;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_user_id(), target);
  }

  // uint64 after_seek = 5;
  if (this->_internal_after_seek() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_after_seek(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseWriteFileBlock)
  return target;
}

size_t ResponseWriteFileBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseWriteFileBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_string = 2;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string task_id = 3;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_id());
  }

  // int64 user_id = 4;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // uint64 after_seek = 5;
  if (this->_internal_after_seek() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_after_seek());
  }

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseWriteFileBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseWriteFileBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseWriteFileBlock::GetClassData() const { return &_class_data_; }

void ResponseWriteFileBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseWriteFileBlock *>(to)->MergeFrom(
      static_cast<const ResponseWriteFileBlock &>(from));
}


void ResponseWriteFileBlock::MergeFrom(const ResponseWriteFileBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseWriteFileBlock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_task_id().empty()) {
    _internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_after_seek() != 0) {
    _internal_set_after_seek(from._internal_after_seek());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseWriteFileBlock::CopyFrom(const ResponseWriteFileBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseWriteFileBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseWriteFileBlock::IsInitialized() const {
  return true;
}

void ResponseWriteFileBlock::InternalSwap(ResponseWriteFileBlock* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &task_id_, lhs_arena,
      &other->task_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseWriteFileBlock, err_code_)
      + sizeof(ResponseWriteFileBlock::err_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseWriteFileBlock, user_id_)>(
          reinterpret_cast<char*>(&user_id_),
          reinterpret_cast<char*>(&other->user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseWriteFileBlock::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[20]);
}

// ===================================================================

class RequestReadFileBlock::_Internal {
 public:
};

RequestReadFileBlock::RequestReadFileBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.RequestReadFileBlock)
}
RequestReadFileBlock::RequestReadFileBlock(const RequestReadFileBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_id().empty()) {
    task_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_task_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.RequestReadFileBlock)
}

inline void RequestReadFileBlock::SharedCtor() {
task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(len_));
}

RequestReadFileBlock::~RequestReadFileBlock() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.RequestReadFileBlock)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestReadFileBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  task_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestReadFileBlock::ArenaDtor(void* object) {
  RequestReadFileBlock* _this = reinterpret_cast< RequestReadFileBlock* >(object);
  (void)_this;
}
void RequestReadFileBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestReadFileBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestReadFileBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.RequestReadFileBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_id_.ClearToEmpty();
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(len_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestReadFileBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string task_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.RequestReadFileBlock.task_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 seek = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          seek_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 len = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestReadFileBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.RequestReadFileBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string task_id = 2;
  if (!this->_internal_task_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_id().data(), static_cast<int>(this->_internal_task_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.RequestReadFileBlock.task_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task_id(), target);
  }

  // uint64 seek = 3;
  if (this->_internal_seek() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_seek(), target);
  }

  // uint32 len = 4;
  if (this->_internal_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.RequestReadFileBlock)
  return target;
}

size_t RequestReadFileBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.RequestReadFileBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 2;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_id());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // uint64 seek = 3;
  if (this->_internal_seek() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_seek());
  }

  // uint32 len = 4;
  if (this->_internal_len() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestReadFileBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestReadFileBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestReadFileBlock::GetClassData() const { return &_class_data_; }

void RequestReadFileBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestReadFileBlock *>(to)->MergeFrom(
      static_cast<const RequestReadFileBlock &>(from));
}


void RequestReadFileBlock::MergeFrom(const RequestReadFileBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.RequestReadFileBlock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_seek() != 0) {
    _internal_set_seek(from._internal_seek());
  }
  if (from._internal_len() != 0) {
    _internal_set_len(from._internal_len());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestReadFileBlock::CopyFrom(const RequestReadFileBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.RequestReadFileBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestReadFileBlock::IsInitialized() const {
  return true;
}

void RequestReadFileBlock::InternalSwap(RequestReadFileBlock* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &task_id_, lhs_arena,
      &other->task_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestReadFileBlock, len_)
      + sizeof(RequestReadFileBlock::len_)
      - PROTOBUF_FIELD_OFFSET(RequestReadFileBlock, user_id_)>(
          reinterpret_cast<char*>(&user_id_),
          reinterpret_cast<char*>(&other->user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestReadFileBlock::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[21]);
}

// ===================================================================

class ResponseReadFileBlock::_Internal {
 public:
};

ResponseReadFileBlock::ResponseReadFileBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.ResponseReadFileBlock)
}
ResponseReadFileBlock::ResponseReadFileBlock(const ResponseReadFileBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_err_string().empty()) {
    err_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_err_string(), 
      GetArenaForAllocation());
  }
  task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_id().empty()) {
    task_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_task_id(), 
      GetArenaForAllocation());
  }
  compressed_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    compressed_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_compressed_data().empty()) {
    compressed_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_compressed_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&err_code_, &from.err_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&seek_) -
    reinterpret_cast<char*>(&err_code_)) + sizeof(seek_));
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.ResponseReadFileBlock)
}

inline void ResponseReadFileBlock::SharedCtor() {
err_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  err_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
compressed_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  compressed_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&err_code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&seek_) -
    reinterpret_cast<char*>(&err_code_)) + sizeof(seek_));
}

ResponseReadFileBlock::~ResponseReadFileBlock() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.ResponseReadFileBlock)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseReadFileBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  err_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  compressed_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseReadFileBlock::ArenaDtor(void* object) {
  ResponseReadFileBlock* _this = reinterpret_cast< ResponseReadFileBlock* >(object);
  (void)_this;
}
void ResponseReadFileBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseReadFileBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseReadFileBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.ResponseReadFileBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_string_.ClearToEmpty();
  task_id_.ClearToEmpty();
  compressed_data_.ClearToEmpty();
  ::memset(&err_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seek_) -
      reinterpret_cast<char*>(&err_code_)) + sizeof(seek_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseReadFileBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string err_string = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_err_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseReadFileBlock.err_string"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string task_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_task_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.ResponseReadFileBlock.task_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 seek = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          seek_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 raw_data_len = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          raw_data_len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes compressed_data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_compressed_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseReadFileBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.ResponseReadFileBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_string = 2;
  if (!this->_internal_err_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_string().data(), static_cast<int>(this->_internal_err_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseReadFileBlock.err_string");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_string(), target);
  }

  // string task_id = 3;
  if (!this->_internal_task_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_id().data(), static_cast<int>(this->_internal_task_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.ResponseReadFileBlock.task_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_task_id(), target);
  }

  // int64 user_id = 4;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_user_id(), target);
  }

  // uint64 seek = 5;
  if (this->_internal_seek() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_seek(), target);
  }

  // uint32 raw_data_len = 6;
  if (this->_internal_raw_data_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_raw_data_len(), target);
  }

  // bytes compressed_data = 7;
  if (!this->_internal_compressed_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_compressed_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.ResponseReadFileBlock)
  return target;
}

size_t ResponseReadFileBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.ResponseReadFileBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_string = 2;
  if (!this->_internal_err_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_string());
  }

  // string task_id = 3;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_id());
  }

  // bytes compressed_data = 7;
  if (!this->_internal_compressed_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_compressed_data());
  }

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  // uint32 raw_data_len = 6;
  if (this->_internal_raw_data_len() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_raw_data_len());
  }

  // int64 user_id = 4;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // uint64 seek = 5;
  if (this->_internal_seek() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_seek());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseReadFileBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseReadFileBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseReadFileBlock::GetClassData() const { return &_class_data_; }

void ResponseReadFileBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseReadFileBlock *>(to)->MergeFrom(
      static_cast<const ResponseReadFileBlock &>(from));
}


void ResponseReadFileBlock::MergeFrom(const ResponseReadFileBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.ResponseReadFileBlock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err_string().empty()) {
    _internal_set_err_string(from._internal_err_string());
  }
  if (!from._internal_task_id().empty()) {
    _internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_compressed_data().empty()) {
    _internal_set_compressed_data(from._internal_compressed_data());
  }
  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  if (from._internal_raw_data_len() != 0) {
    _internal_set_raw_data_len(from._internal_raw_data_len());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_seek() != 0) {
    _internal_set_seek(from._internal_seek());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseReadFileBlock::CopyFrom(const ResponseReadFileBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.ResponseReadFileBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseReadFileBlock::IsInitialized() const {
  return true;
}

void ResponseReadFileBlock::InternalSwap(ResponseReadFileBlock* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &err_string_, lhs_arena,
      &other->err_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &task_id_, lhs_arena,
      &other->task_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &compressed_data_, lhs_arena,
      &other->compressed_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseReadFileBlock, seek_)
      + sizeof(ResponseReadFileBlock::seek_)
      - PROTOBUF_FIELD_OFFSET(ResponseReadFileBlock, err_code_)>(
          reinterpret_cast<char*>(&err_code_),
          reinterpret_cast<char*>(&other->err_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseReadFileBlock::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[22]);
}

// ===================================================================

class CloseFile::_Internal {
 public:
};

CloseFile::CloseFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Global.Protocol.File.CloseFile)
}
CloseFile::CloseFile(const CloseFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_id().empty()) {
    task_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_task_id(), 
      GetArenaForAllocation());
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:Global.Protocol.File.CloseFile)
}

inline void CloseFile::SharedCtor() {
task_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  task_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_id_ = int64_t{0};
}

CloseFile::~CloseFile() {
  // @@protoc_insertion_point(destructor:Global.Protocol.File.CloseFile)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CloseFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  task_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CloseFile::ArenaDtor(void* object) {
  CloseFile* _this = reinterpret_cast< CloseFile* >(object);
  (void)_this;
}
void CloseFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CloseFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CloseFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Global.Protocol.File.CloseFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_id_.ClearToEmpty();
  user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloseFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string task_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Global.Protocol.File.CloseFile.task_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CloseFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Global.Protocol.File.CloseFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string task_id = 2;
  if (!this->_internal_task_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_id().data(), static_cast<int>(this->_internal_task_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Global.Protocol.File.CloseFile.task_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Global.Protocol.File.CloseFile)
  return target;
}

size_t CloseFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Global.Protocol.File.CloseFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 2;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_id());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloseFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CloseFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloseFile::GetClassData() const { return &_class_data_; }

void CloseFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CloseFile *>(to)->MergeFrom(
      static_cast<const CloseFile &>(from));
}


void CloseFile::MergeFrom(const CloseFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Global.Protocol.File.CloseFile)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CloseFile::CopyFrom(const CloseFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Global.Protocol.File.CloseFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseFile::IsInitialized() const {
  return true;
}

void CloseFile::InternalSwap(CloseFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &task_id_, lhs_arena,
      &other->task_id_, rhs_arena
  );
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseFile::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_File_2eproto_getter, &descriptor_table_File_2eproto_once,
      file_level_metadata_File_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace File
}  // namespace Protocol
}  // namespace Global
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::EntryInfo* Arena::CreateMaybeMessage< ::Global::Protocol::File::EntryInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::EntryInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestVisitFiles* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestVisitFiles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestVisitFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseVisitFiles* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseVisitFiles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseVisitFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestVisitFiles2* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestVisitFiles2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestVisitFiles2 >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseVisitFiles2* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseVisitFiles2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseVisitFiles2 >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestMakeDirectory* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestMakeDirectory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestMakeDirectory >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseMakeDirectory* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseMakeDirectory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseMakeDirectory >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestDeleteEntry* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestDeleteEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestDeleteEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseDeleteEntry* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseDeleteEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseDeleteEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestRenameEntry* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestRenameEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestRenameEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseRenameEntry* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseRenameEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseRenameEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestGoUp* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestGoUp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestGoUp >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseGoUp* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseGoUp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseGoUp >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestGoHome* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestGoHome >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestGoHome >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseGoHome* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseGoHome >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseGoHome >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestListEntries* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestListEntries >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestListEntries >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseListEntries* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseListEntries >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseListEntries >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestOpenFile* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestOpenFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestOpenFile >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseOpenFile* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseOpenFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseOpenFile >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestWriteFileBlock* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestWriteFileBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestWriteFileBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseWriteFileBlock* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseWriteFileBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseWriteFileBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::RequestReadFileBlock* Arena::CreateMaybeMessage< ::Global::Protocol::File::RequestReadFileBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::RequestReadFileBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::ResponseReadFileBlock* Arena::CreateMaybeMessage< ::Global::Protocol::File::ResponseReadFileBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::ResponseReadFileBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::Global::Protocol::File::CloseFile* Arena::CreateMaybeMessage< ::Global::Protocol::File::CloseFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Global::Protocol::File::CloseFile >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
